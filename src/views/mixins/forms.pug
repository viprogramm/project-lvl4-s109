- const getInputName = (f, property) => `${f.name}[${property}]`

mixin formFor(f, options = {})
  form(action=_.get(options, 'url') method=_.get(options, 'method', 'get'))
    block

mixin input(f, property, options = { as: 'text' })
  if(options.as === undefined)
    - options = _.merge(options, {as: 'text'})
  - const value = f.object[property] === undefined ? '' : f.object[property]
  if(options.as === 'hidden')
    input(name=getInputName(f, property) type=options['as'] value=`${value}`)
  else
    .form-group(class=(f.errors[property] && 'has-danger'))
      label= options['label'] ? options['label'] : property
      input(name=getInputName(f, property) class='form-control' type=options['as'] value=`${value}`)
      if f.errors[property]
        .form-control-feedback= f.errors[property].map(({ message }) => message).join('. ')

mixin select(f, property, options)
  - const value = f.object[property] === undefined ? '' : f.object[property]
  - const inputName = options['name'] ? options['name'] : getInputName(f, property)
  .form-group(class=(f.errors[property] && 'has-danger'))
    label= options['label'] ? options['label'] : property
    select(name=`${inputName}` class='form-control')
      if(options['empty'])
        option
      each option in options['options']
        if(value === option.id )
          option(value=`${option.id}`, selected='selected')=option.name
        else
          option(value=`${option.id}`)=option.name
    if f.errors[property]
      .form-control-feedback= f.errors[property].map(({ message }) => message).join('. ')

mixin multipleSelect(f, property, options)
  - const value = f.object[property] === undefined ? '' : f.object[property]
  - const selected = Object.keys(value).map(key => value[key].id)
  .form-group(class=(f.errors[property] && 'has-danger'))
    label= options['label'] ? options['label'] : property
    select(name=getInputName(f, property) multiple class='form-control')
      each option in options['options']
        if(selected.includes(option.id) )
          option(value=`${option.id}`, selected='selected')=option.name
        else
          option(value=`${option.id}`)=option.name
    if f.errors[property]
      .form-control-feedback= f.errors[property].map(({ message }) => message).join('. ')

mixin button(f, type = 'submit', value = 'Save')
  .form-group
    input(class='btn btn-primary' type=`${type}` value=`${value}`)

mixin requestMethod(method = 'patch')
  input(name='_method' type='hidden' value=`${method}`)
